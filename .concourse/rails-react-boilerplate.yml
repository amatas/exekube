groups:
- name: master
  jobs:
  - version-master
  - tag-master
  - build-master
  - release-master

- name: production
  jobs:
  - merge-master-to-production
  - version-production
  - tag-production
  - build-production
  - release-production

- name: bump-version
  jobs:
  - patch
  - minor
  - major
  - rc

resource_types:
- name: helm
  type: docker-image
  source:
    repository: linkyard/concourse-helm-resource

resources:
- name: exekube
  type: git
  source:
    uri: https://github.com/ilyasotkov/exekube.git
    branch: develop

- name: repo-master
  type: git
  source:
    uri: ((github_repo_uri))
    private_key: ((github_private_key))
    branch: master

- name: repo-production
  type: git
  source:
    uri: ((github_repo_uri))
    private_key: ((github_private_key))
    branch: production

- name: rc-version
  type: semver
  source:
    driver: git
    uri: ((github_repo_uri))
    private_key: ((github_private_key))
    branch: rc-version
    file: version
    intial_version: ((initial_version))

- name: final-version
  type: semver
  source:
    driver: git
    uri: ((github_repo_uri))
    private_key: ((github_private_key))
    branch: final-version
    file: version
    intial_version: ((initial_version))

- name: docker-image
  type: docker-image
  source:
    repository: registry.swarm.pw:443/rails-react-boilerplate
    username: ((docker_registry_username))
    password: ((docker_registry_password))

- name: helm-release
  type: helm
  source:
    cluster_url: ((kube_url))
    cluster_ca: ((kube_ca))
    token: ((kube_token))
    repos:
    - name: private
      url: ((private_charts_repo_url))

jobs:
# ------------------------------------------------------------------------------
# Master / staging branch jobs
# ------------------------------------------------------------------------------
- name: version-master
  serial: true
  serial_groups: [ update-version ]
  plan:
  - aggregate:
    - get: master
      resource: repo-master
      trigger: true
    - get: rc-version
  - put: rc-version
    params:
      pre: rc

- name: tag-master
  serial: true
  plan:
  - aggregate:
    - get: master
      resource: repo-master
      passed: [ version-master ]
      trigger: true
    - get: rc-version
      passed: [ version-master ]
  - put: master
    resource: repo-master
    params:
      repository: master
      tag: rc-version/version

- name: build-master
  serial: true
  plan:
  - aggregate:
    - get: master
      resource: repo-master
      trigger: true
      passed: [ version-master ]
    - get: rc-version
      passed: [ version-master ]
  - put: docker-image
    params:
      build: master
      tag: rc-version/version
      cache: false
      tag_as_latest: true
      # uncomment these lines after initial image build and push
      # cache: true
      # cache_tag: latest

- name: release-master
  serial: true
  plan:
  - aggregate:
    - get: exekube
    - get: repo-master
      trigger: true
      passed: [ build-master ]
    - get: rc-version
  - put: helm-release
    params:
      chart: private/rails-app
      values: exekube/.concourse/release/rails-app/values.yaml
      release: exekube/.concourse/release/rails-app/release.txt
      replace: true
      devel: true
      recreate_pods: false
      wait_until_ready: 500
      override_values:
      - key: image.pullSecret
        value: registry-dockercfg
      - key: image.tag
        path: rc-version/version
      - key: image.repository
        value: registry.swarm.pw/rails-react-boilerplate

# ------------------------------------------------------------------------------
# Production branch jobs
# ------------------------------------------------------------------------------
- name: merge-master-to-production
  serial: true
  plan:
  - aggregate:
    - get: exekube
    - get: master
      resource: repo-master
      # trigger: true
      # passed: [ release-master ]
    - get: production
      resource: repo-production
  - task: merge-master-to-production
    file: exekube/.concourse/tasks/merge-branch.yml
    input_mapping:
      concourse: exekube
      from: master
      to: production
    output_mapping:
      out: next-production
    params:
      GIT_EMAIL: concourse@ci.swarm.pw
      GIT_NAME: concourse
      NO_FF: true
  - put: production
    resource: repo-production
    params:
      repository: next-production

- name: version-production
  serial: true
  plan:
    - aggregate:
      - get: production
        resource: repo-production
        passed: [ merge-master-to-production ]
        trigger: true
      - get: rc-version
        params:
          bump: final
    - put: final-version
      params:
        file: rc-version/version

- name: tag-production
  serial: true
  plan:
  - aggregate:
    - get: production
      resource: repo-production
      passed: [ version-production ]
      trigger: true
    - get: final-version
      passed: [ version-production ]
  - put: production
    resource: repo-production
    params:
      repository: production
      tag: final-version/version

- name: build-production
  serial: true
  plan:
  - aggregate:
    - get: production
      resource: repo-production
      trigger: true
      passed: [ version-production ]
    - get: rc-version
    - get: final-version
  - put: docker-image
    params:
      build: production
      tag: final-version/version
      cache: true
      cache_tag: latest

- name: release-production
  serial: true
  plan:
  - aggregate:
    - get: exekube
    - get: production
      resource: repo-production
      trigger: true
      passed: [ build-production ]
    - get: final-version
  - put: helm-release
    params:
      chart: private/rails-app
      values: exekube/.concourse/release/rails-app-production/values.yaml
      release: exekube/.concourse/release/rails-app-production/release.txt
      replace: true
      devel: true
      recreate_pods: false
      wait_until_ready: 500
      override_values:
      - key: image.pullSecret
        value: registry-dockercfg
      - key: image.tag
        path: final-version/version
      - key: image.repository
        value: registry.swarm.pw/rails-react-boilerplate

# ------------------------------------------------------------------------------
# SEMVER: patch, minor, major version bumps. Must be triggered manually!
# ------------------------------------------------------------------------------
- name: patch
  serial: true
  serial_groups: [ update-version ]
  plan:
    - get: rc-version
    - put: rc-version
      params: { bump: patch }
      passed:
- name: minor
  serial: true
  serial_groups: [ update-version ]
  plan:
    - get: rc-version
    - put: rc-version
      params: { bump: minor }

- name: major
  serial: true
  serial_groups: [ update-version ]
  plan:
    - get: rc-version
    - put: rc-version
      params: { bump: major }

- name: rc
  serial: true
  serial_groups: [ update-version ]
  plan:
    - get: rc-version
    - put: rc-version
      params: { pre: rc }

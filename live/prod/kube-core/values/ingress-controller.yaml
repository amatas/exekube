## Docs (in comments):
## https://github.com/kubernetes/charts/blob/master/stable/nginx-ingress/values.yaml
##
name: controller
  image:
    repository: gcr.io/google_containers/nginx-ingress-controller
    tag: "0.9.0-beta.15"
    pullPolicy: IfNotPresent
  config:
    server-tokens: "false"
    hostNetwork: false
  defaultBackendService: ""
  defaultSSLCertificate: ""
  electionID: ingress-controller-leader
  ingressClass: nginx
  podLabels: {}
  publishService:
    enabled: false
    pathOverride: ""
  scope:
    enabled: false
    namespace: ""
  extraArgs: {}
  kind: Deployment
  updateStrategy: {}
  tolerations: []
  nodeSelector: {}
  podAnnotations: {}
  replicaCount: 2
  resources: {}
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    externalTrafficPolicy: ""
    healthCheckNodePort: 0
    targetPorts:
      http: 80
      https: 443
    type: LoadBalancer
    nodePorts:
      http: ""
      https: ""
  stats:
    enabled: false
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 18080
      type: ClusterIP
defaultBackend:
  enabled: true
  name: default-backend
  image:
    repository: gcr.io/google_containers/defaultbackend
    tag: "1.3"
    pullPolicy: IfNotPresent
  extraArgs: {}
  tolerations: []
  podLabels: {}
  nodeSelector: {}
  podAnnotations: {}
  replicaCount: 1
  resources: {}
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 80
    type: ClusterIP
rbac:
  create: false
  serviceAccountName: default
statsExporter:
  name: stats-exporter
  image:
    repository: sophos/nginx-vts-exporter
    tag: v0.6
    pullPolicy: IfNotPresent
  endpoint: /metrics
  extraArgs: {}
  metricsNamespace: nginx
  statusPage: http://localhost:18080/nginx_status/format/json
  resources: {}
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 9913
    type: ClusterIP
tcp: {}
udp: {}

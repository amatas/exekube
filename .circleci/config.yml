version: 2
jobs:
  apply-live:
    working_directory: /exekube
    environment:
      XK_LIVE_DIR: /exekube/live/prod
      TF_INPUT: "0"
      TF_LOG: ""
      TF_VAR_gcp_project: production-project-193513
      TF_VAR_gcp_remote_state_bucket: project-terraform-state
      VAULT_ADDR: https://localhost
      VAULT_CACERT:
    docker:
      - image: ilyasotkov/exekube:latest
    steps:
      - checkout
      - restore_cache:
          key: all-cache
      - run:
          name: Import secrets from environment variables
          command: |
              mkdir -p /exekube/backup/tls \
              && echo $YAML_SECRETS_ENCODED | base64 -d > /exekube/backup/tls/secret.yaml \
              && mkdir -p /exekube/live/prod/kube/ci/docker-registry/secrets \
              && echo $REGISTRY_PASSWORD | base64 -d > /exekube/live/prod/kube/ci/docker-registry/secrets/basic-auth-password \
              && echo $REGISTRY_USERNAME | base64 -d > /exekube/live/prod/kube/ci/docker-registry/secrets/basic-auth-username
      - run:
          name: Authorize to gcloud
          command: |
              echo $GCLOUD_SA_KEY | base64 -d > google-credentials.json \
              && echo 'export GOOGLE_CREDENTIALS=$PWD/google-credentials.json' >> $BASH_ENV \
              && gcloud auth activate-service-account \
              --key-file=google-credentials.json

      - run:
          name: Create everything
          command: |
              ./_docker/docker-entrypoint.sh apply 2>&1 | grep -v 'terragrunt' \
              && echo Done!
      - run:
          name: Destroy everything
          command: |
              ./_docker/docker-entrypoint.sh destroy 2>&1 | grep -v 'terragrunt' \
              && echo Done! \
              && rm -rf google-credentials.json
      - save_cache:
          key: all-cache
          paths:
            - /root/.helm
            - /root/.terragrunt
            - /root/.config/gcloud
            - /root/.kube

  deploy-docs:
    docker:
      - image: squidfunk/mkdocs-material:latest
    steps:
      - checkout
      - run: echo $CIRCLE_REPOSITORY_URL
      - run:
          name: Build and deploy website to GitHub Pages
          command: mkdocs gh-deploy --message "Deployed with MkDocs and CircleCI $CIRCLE_BUILD_URL [ci skip]"
workflows:
  version: 2
  deploy:
    jobs:
      - deploy-docs
      - apply-live:
          context: org-global

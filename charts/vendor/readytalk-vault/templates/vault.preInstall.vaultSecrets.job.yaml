{{- if .Values.Vault.Tls.LetsEncrypt.Enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-{{.Values.Vault.PreInstall.ComponentName}}
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: {{.Values.Vault.PreInstall.ComponentName}}
    app: {{ template "name" . }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "100"
spec:
  activeDeadlineSeconds: {{.Values.Vault.PreInstall.JobDeadline}}
  template:
    metadata:
      name: {{ template "fullname" . }}-{{.Values.Vault.PreInstall.ComponentName}}
      labels:
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        component: {{.Values.Vault.PreInstall.ComponentName}}
        app: {{ template "name" . }}
    spec:
      restartPolicy: Never
      containers:
      - name: {{ template "fullname" . }}-{{.Values.Vault.PreInstall.ComponentName}}
        image: "bartlettc/letsencrypt-acm:kubernetes"
        imagePullPolicy: "Always"
        env:
          - name: FULL_NAME
            value: {{ template "fullname" . }}
          - name: "VAULT_TLS_SERVER_NAME"
            value: "{{.Values.Vault.Tls.ServerName}}"
          - name: "VAULT_TLS_ALT_SERVER_NAMES"
            value: "{{.Values.Vault.Tls.AlternateServerNames}}"
          - name: ACME_ENVIRONMENT
            value: {{.Values.Vault.Tls.LetsEncrypt.Environment}}
          - name: ACME_ACCOUNT_KEY
            value: {{.Values.Vault.Tls.LetsEncrypt.AcmeAccountKey}}
        command:
        - "bash"
        - "-ec"
        - |
          chmod -R +x /pre-install
          /pre-install/generate-vault-cert.sh
          /pre-install/create-vault-secrets.sh
        volumeMounts:
        - name: pre-install
          mountPath: /pre-install
        - name: podinfo
          mountPath: /etc/podinfo
          readOnly: true
      volumes:
        - name: pre-install
          configMap:
            name: {{ template "fullname" . }}-{{.Values.Vault.PreInstall.ComponentName}}
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
{{- end }}
